{"version":3,"sources":["jquery.js"],"names":["window","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","find","selector","array","i","length","elements2","from","concat","oldApi","each","fn","call","parent","node","indexOf","parentNode","push","children","print","console","log","end","addClass","className","element","classList","add","appendTo","Element","appendChild","el","jquery","get"],"mappings":"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","file":"jquery.3ff854d3.map","sourceRoot":"../src","sourcesContent":["window.jQuery = function(selectorOrArray) {\n    let elements\n    if (typeof selectorOrArray === 'string') {\n        elements = document.querySelectorAll(selectorOrArray)\n    } else if (selectorOrArray instanceof Array) {\n        elements = selectorOrArray\n    }\n    //api 可以操作elements\n    return {\n        find(selector) {\n            let array = []\n            for (let i = 0; i < elements.length; i++) {\n                const elements2 = Array.from(elements[i].querySelectorAll(selector))\n                array = array.concat(elements2)\n            }\n            array.oldApi = this //this 就是旧Api\n            return jQuery(array)\n        },\n        each(fn) {\n            for (let i = 0; i < elements.length; i++) {\n                fn.call(null, elements[i], i)\n            }\n            return this //this就是api对象\n        },\n        parent() {\n            const array = []\n            this.each((node) => {\n                if (array.indexOf(node.parentNode) === -1) {\n                    array.push(node.parentNode)\n                }\n            })\n            return jQuery(array)\n        },\n        children() {\n            const array = []\n            this.each((node) => {\n                // 上课的时候这段代码是复制的，复制错了，现已改正\n                array.push(...node.children)\n\n            })\n            return jQuery(array)\n        },\n        print() {\n            console.log(elements) //elements 就是对应的元素们\n        },\n        oldApi: selectorOrArray.oldApi,\n        end() {\n            return this.oldApi //this 就是当前的Api // Api2\n        },\n        //闭包函数访问外部的变量\n        addClass(className) {\n            for (let i = 0; i < elements.length; i++) {\n                const element = elements[i]\n                element.classList.add(className)\n            }\n            return this\n        },\n        appendTo(node) {\n            if (node instanceof Element) {\n                this.each(el => node.appendChild(el)) // 遍历 elements，对每个 el 进行 node.appendChild 操作\n            } else if (node.jquery === true) {\n                this.each(el => node.get(0).appendChild(el)) // 遍历 elements，对每个 el 进行 node.get(0).appendChild(el))  操作\n            }\n        },\n    }\n}"]}